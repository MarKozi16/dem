// 1) Crear composición de imágenes Sentinel 2//

var img = ee.ImageCollection('COPERNICUS/S2')
                  .filterDate('2018-01-01', '2018-12-31')
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
                  .filterBounds(geometry)
                  .map(function(image){return image.clip(geometry)})
                  .median();

// Centrar el mapa en el área de estudio
Map.centerObject(geometry);

// Añadir imagen al mapa
Map.addLayer (img, {
  max: 4000, 
  min: 0.0, 
  gamma: 1.0,
  bands: ['B4','B3','B2']}, 
  'Imagen Sentinel 2');
  
//// 2) CLASIFICACIÓN ////

// Paleta de colores
var paleta = [
  "#14c1ee", // Agua
  "#1bc324", // Vegetacion
  "#c2390a", // Agricultura
  "#9220c6", // Urbano
  "#f1ff5a"]; // Suelo
  
// Seleccionar bandas
var bands = img.bandNames();

// Unir los datos de entrenamiento de las distintas clases
var training_data = Agua.merge(Vegetacion).merge(Agricultura).merge(Urbano).merge(Suelo);

// "Muestrear las regiones
var rf_training = img.select(bands).sampleRegions(
  {collection: training_data,
    properties: ["land_class"], scale:20});
    
// Entrenar al clasificador
var rf = ee.Classifier.smileRandomForest(100).train({
  features: rf_training,
  classProperty: "land_class",
  inputProperties: bands
})


// Obtener la imagen clasificada
var img_clas = img.select(bands).classify(rf);

// Añadir la imagen clasificada al mapa
Map.addLayer(img_clas, {min: 1, max:5, palette: paleta}, "LULC area de estudio");



//// 3) Importar y representar shapefiles en Google Earth Engine ////
        // Representamos los datos del vector
        Map.addLayer(table.draw ({color: 'red'}), {}, 'LRNECAXAI');

        // Parametrizamos y representamos el relleno, grosor, color y transparencia
        var RellenoAOI = ee.Image().byte();
        var LimiteAOI = RellenoAOI.paint({featureCollection: geometry, width: 5,});

// crear clip de la zona de estudio con un poligono 
var clipUser = img_clas.clip(table);
Map.addLayer(clipUser, {min: 1, max:5, palette: paleta}, "RIO NECAXA");

// Exportar la imagen clasificada a Drive
Export.image.toDrive({
  image: clipUser,
  description: 'RN_AREA',
  scale: 20,
  region: geometry});
  
